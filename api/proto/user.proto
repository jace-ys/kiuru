syntax = "proto3";

package user;

import "google/api/annotations.proto";

service UserService {
  rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  }

  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "user"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/v1/users/{id}"
    };
  }

  rpc GetAuthToken(GetAuthTokenRequest) returns (GetAuthTokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/token"
      body: "*"
    };
  }

  rpc RefreshAuthToken(RefreshAuthTokenRequest) returns (RefreshAuthTokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/token/refresh"
    };
  }
}

message User {
  string id = 1;
  string username = 2;
  string password = 3;
  string email = 4;
  string name = 5;
}

message GetAllUsersRequest {}

message GetAllUsersResponse {
  repeated User users = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message CreateUserRequest {
  User user = 1;
}

message CreateUserResponse {
  string id = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {}

message GetAuthTokenRequest {
  string username = 1;
  string password = 2;
}

message GetAuthTokenResponse {}

message RefreshAuthTokenRequest {}

message RefreshAuthTokenResponse {}
